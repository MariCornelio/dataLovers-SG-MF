import { filterTitle } from "./data.js";
import studioGhibli from "./data/ghibli/ghibli.js";

const arrayGhibli = studioGhibli.films;
// header
const main = document.querySelector("main");
const footer = document.querySelector(".footer");
const headerInput = document.querySelector(".header-input");

// calculos
// menu de navegacion
main.addEventListener("click", () => {
  headerInput.checked = false;
});
footer.addEventListener("click", () => {
  headerInput.checked = false;
});
// *****************************************************************

// usando las etiquetas de filmography.html
const animationContainer = document.querySelector(".animation-container");

const showAbstract = (obj) => {
  animationContainer.innerHTML = "";
  animationContainer.innerHTML = `<section class="animation-image">
           <img
            src=${obj.poster} alt=${obj.title}> 
        </section>
        <section class="animation-abstract">
          <div class="animation-title">
            <h1>${obj.title}</h1>
            <p>${obj.release_date}</p> 
          </div>
          <div class="animation-info">
            <div class="animation-director">
              <p>DIRECTED BY : </p>
              <p>${obj.director}</p>
            </div>
            <div class="animation-productor">
              <p>PRODUCED BY : </p>
              <p>${obj.producer}</p>
            </div>
            <div class="animation-description">
              <p>DESCRIPTION : </p>
              <p>
              ${obj.description}
              </p>
            </div>
          </div>
        </section>`;
};

// *************************************************************************
// locaciones
// array con los climas y su imagen respectiva
const buttonLocations = document.querySelector(".buttons-container");
const optionClimate = [
  {
    climate: "Dry",
    img: "assets/dry.png",
  },
  {
    climate: "Continental",
    img: "assets/continental.png",
  },
  {
    climate: "Damp",
    img: "assets/damp.png",
  },
  {
    climate: "Mild",
    img: "assets/mild.png",
  },
  {
    climate: "Tropical",
    img: "assets/tropical.png",
  },
  {
    climate: "Warm",
    img: "assets/warm.png",
  },
  {
    climate: "Wet",
    img: "assets/wet.png",
  },
];

const autoGeneratedClimate = (obj, locationClimateContainer) => {
  // insertando maquetado
  // layoutLocation(obj);
  // const locationClimateContainer = document.querySelector(
  //   ".location-climate-container"
  // );

  // insertando clima dinÃ¡mico
  if (obj.climate === "TODO") {
    optionClimate.forEach((elemento) => {
      locationClimateContainer.innerHTML += `<div class="location-climate-image">
                  <img src=${elemento.img} alt=${elemento.climate}>
                  <p>${elemento.climate}</p>
                  </div>
                `;
    });
  }
  optionClimate.forEach((elemento) => {
    if (elemento.climate === obj.climate) {
      locationClimateContainer.innerHTML = `<div class="location-climate-image">
                  <img src=${elemento.img} alt=${elemento.climate}>
                  <p>${elemento.climate}</p>
                </div>`;
    }
  });
};

const autoGeneratedCharacters = (obj, locationCharacterContainer) => {
  // const locationCharacterContainer = document.querySelector(
  //   ".location-characters-container"
  // );
  if (obj.residents.length === 0) {
    locationCharacterContainer.innerHTML = "Proximamente";
  }

  if (obj.residents[0] === "TODO") {
    filterTitle(arrayGhibli, localStorage.getItem("titleFilm")).people.forEach(
      (elemento) => {
        locationCharacterContainer.innerHTML += `<div class="location-characters-image">
                <img src=${elemento.img} alt=${elemento.name}>
                <p>${elemento.name}</p>
              </div>`;
      }
    );
  } else {
    obj.residents.forEach((elemento) => {
      const objCharacter = filterTitle(
        arrayGhibli,
        localStorage.getItem("titleFilm")
      ).people.filter((obj) => obj.name === elemento.name);
      locationCharacterContainer.innerHTML += `<div class="location-characters-image">
                <img src=${objCharacter[0].img} alt=${elemento.name}>
                <p>${elemento.name}</p>
              </div>`;
    });
  }
};
const layoutLocation = (obj) => {
  const filmographyContainer = document.querySelector(".filmography-container");
  // filmographyContainer.innerHTML = "";
  const locationContainer = document.createElement("div");
  locationContainer.classList.add("locations-container");
  filmographyContainer.insertAdjacentElement("afterbegin", locationContainer);
  const sectionLocation = document.createElement("section");
  sectionLocation.classList.add("location");
  const locationImageClimate = document.createElement("div");
  locationImageClimate.classList.add("location-image-climate");
  locationImageClimate.innerHTML = `<div class="location-image-container">
              <img src=${obj.img} alt=${obj.name}>
              <p>${obj.name}</p>
            </div>`;
  sectionLocation.insertAdjacentElement("beforeend", locationImageClimate);
  const locationClimate = document.createElement("div");
  locationClimate.classList.add("location-climate");
  const textClimate = document.createElement("p");
  textClimate.textContent = "CLIMATE";
  const locationClimateContainer = document.createElement(
    "location-climate-container"
  );
  locationClimateContainer.classList.add("location-climate-container");
  locationClimate.insertAdjacentElement("beforeend", textClimate);
  locationClimate.insertAdjacentElement("beforeend", locationClimateContainer);
  locationImageClimate.insertAdjacentElement("beforeend", locationClimate);
  autoGeneratedClimate(obj, locationClimateContainer);

  const locationCharacters = document.createElement("div");
  locationCharacters.classList.add("location-characters");
  const textCharacter = document.createElement("p");
  textCharacter.textContent = "RESIDENTS";
  const locationCharacterContainer = document.createElement("div");
  locationCharacterContainer.classList.add("location-characters-container");
  locationCharacters.insertAdjacentElement("beforeend", textCharacter);
  locationCharacters.insertAdjacentElement(
    "beforeend",
    locationCharacterContainer
  );
  sectionLocation.insertAdjacentElement("beforeend", locationCharacters);
  autoGeneratedCharacters(obj, locationCharacterContainer);

  locationContainer.insertAdjacentElement("beforeend", sectionLocation);
};
const showLocation = (obj) => {
  const filmographyContainer = document.querySelector(".filmography");
  if (obj.locations.length === 0) {
    filmographyContainer.innerHTML = "no hay locaciones";
  }
  for (let i = 0; i < obj.locations.length; i++) {
    layoutLocation(obj.locations[i]);
  }
};

// *******************************************************************************************
// *******************************************************************

// mostrando los personajes de cada film
const charactersContainer = document.getElementById("filmography-container");
const btnCharacters = document.getElementById("characters-button");
const animationTitle = document.querySelector(".animation-title h1");

const showPeople = (obj) => {
  const people = obj.people;
  console.log(people);
  charactersContainer.innerHTML = "";
  people.forEach((character) => {
    const sectionCharacters = document.createElement("section");
    sectionCharacters.classList.add("characters-container-section");
    sectionCharacters.innerHTML = ` <div class="character-card-container">
              <div class="character-img-container">
                <img src=${character.img} alt=${character.name}>
                </div>
                <div class="character-description-container">
                <h3>${character.name}</h3>
                <p>Gender: ${character.gender}</p>
                <p>Age: ${character.age}</p>
                <p>Eye color: ${character.eye_color}</p>
                <p>Hair color: ${character.hair_color}</p>
                <p>Specie: ${character.specie}</p>
                </div>
              </div>`;
    charactersContainer.appendChild(sectionCharacters);
  });
};


// animation
// usando los titulos dados por films.html
document.addEventListener("click", (e) => {
  if (e.target.matches(".films-grid__section-title a")) {
    // localStorage.getItem("titleFilm");
    localStorage.setItem("titleFilm", e.target.innerHTML);
  }
});
if (location.pathname === "/src/filmography.html") {
  showAbstract(filterTitle(arrayGhibli, localStorage.getItem("titleFilm")));
  
  buttonLocations.children[1].addEventListener("click", () => {
    const filmographyContainer = document.querySelector(
      ".filmography-container"
    );
    filmographyContainer.innerHTML = "";
    showLocation(filterTitle(arrayGhibli, localStorage.getItem("titleFilm")));
  showPeople(filterTitle(arrayGhibli, localStorage.getItem("titleFilm")));
  
  btnCharacters.addEventListener("click", () => {
    showPeople(filterTitle(arrayGhibli, localStorage.getItem("titleFilm")));
  });
}
